// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  reviews   Review[]
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id          String     @id @default(uuid())
  name        String
  description String
  price       Float
  image       String?
  quantity    Int        @default(0)
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  reviews     Review[]
  orderItems  OrderItem[]
  rating      Float      @default(0)
  numReviews  Int        @default(0)
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId])
}

model Order {
  id              String      @id @default(uuid())
  user            User        @relation(fields: [userId], references: [id])
  userId          String
  orderItems      OrderItem[]
  shippingAddress Json
  paymentMethod   String
  totalPrice      Float       @default(0)
  isPaid          Boolean     @default(false)
  paidAt          DateTime?
  isDelivered     Boolean     @default(false)
  deliveredAt     DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  name      String
  qty       Int
  price     Float
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
}

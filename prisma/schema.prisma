// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  reviews   Review[]
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  image       String?
  quantity    Int       @default(0)
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String    @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviews     Review[]
  orderItems  OrderItem[]
  rating      Float     @default(0)
  numReviews  Int       @default(0)
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  comment   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId])
}

model Order {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  user             User       @relation(fields: [userId], references: [id])
  userId           String     @db.ObjectId
  orderItems       OrderItem[]
  shippingAddress  Address
  paymentMethod    String
  totalPrice       Float      @default(0)
  isPaid           Boolean    @default(false)
  paidAt           DateTime?
  isDelivered      Boolean    @default(false)
  deliveredAt      DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  qty       Int
  price     Float
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @db.ObjectId
}

type Address {
  address    String
  city       String
  postalCode String
}
